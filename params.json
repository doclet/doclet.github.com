{"body":"TeXDoclet is a Java doclet implementation that generates a LaTeX file from you Java code documentation.\r\n\r\nThe doclet is based on the doclet originally created by Greg Wonderly of\r\n[C2 technologies Inc.](http://www.c2-tech.com>) and its revision by Soeren Caspersen of\r\n[XO Software](http://www.xosoftware.dk).\r\n\r\nExample outputs\r\n---------------\r\n\r\nSee the following example PDF documents which are generated by *pdflatex* from *TeXDoclet* LaTeX output :\r\n\r\n* report document class example : [TeXDoclet_report.pdf](resources/examples/TeXDoclet_report.pdf)\r\n* article document class example : [TeXDoclet_article.pdf](resources/examples/TeXDoclet_article.pdf)\r\n\r\n<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\" type=\"text/javascript\"></script>\r\n<script src=\"javascripts/lightbox/js/lightbox.js\"></script>\r\n<script src=\"javascripts/my_script.js\"></script>\r\n<link href=\"css/lightbox.css\" rel=\"stylesheet\" />\r\n<link href=\"css/my_stylesheet.css\" rel=\"stylesheet\" />\r\n<div id=\"exampleImagesDiv\">\r\n\t<span><a href=\"images/examples/texdoclet_content_structuring.png\" rel=\"lightbox[roadtrip]\" title=\"content structuring\">\r\n\t\t<img src=\"images/examples/texdoclet_content_structuring.png\"></a></span>\r\n\t<span><a href=\"images/examples/texdoclet_class_hierarchy.png\" rel=\"lightbox[roadtrip]\" title=\"class hierarchy\">\r\n\t\t<img src=\"images/examples/texdoclet_class_hierarchy.png\"></a></span>\r\n\t<span><a href=\"images/examples/texdoclet_package_overview.png\" rel=\"lightbox[roadtrip]\" title=\"package overview\">\r\n\t\t<img src=\"images/examples/texdoclet_package_overview.png\"></a></span>\r\n\t<span><a href=\"images/examples/texdoclet_class_description_1_with_summaries.png\" rel=\"lightbox[roadtrip]\" title=\"class description part 1 with summaries\">\r\n\t\t<img src=\"images/examples/texdoclet_class_description_1_with_summaries.png\"></a></span>\r\n\t<span><a href=\"images/examples/texdoclet_class_description_2.png\" rel=\"lightbox[roadtrip]\" title=\"class description part 2\">\r\n\t\t<img src=\"images/examples/texdoclet_class_description_2.png\"></a></span>\r\n</div>\r\n\r\n\r\nDownload\r\n--------\r\n\r\n<div class=\"flowleft\" id=\"downloadTexdocletDiv\">\r\n<a href=\"resources/bin/TeXDoclet.jar\"><img src=\"images/download.png\"></a>\r\n</div>\r\n\r\n### TeXDoclet.jar\r\n\r\n[*TeXDoclet.jar*](resources/bin/TeXDoclet.jar) is all you need to create LaTeX file from your Java sources.\r\n\r\n### Latest version & Source Code\r\n\r\n*Github* project site : <http://github.com/doclet/texdoclet>.\r\n\r\nInstead of downloading the Java jar file you can also check out the latest *TeXDoclet* version by cloning the *Git* repository `https://github.com/doclet/texdoclet.git`\r\n\r\n    git clone https://github.com/doclet/texdoclet.git\r\n\r\nAnd compile the *TeXDoclet.jar* with maven2 from the project root directory :\r\n\r\n\tmvn clean install\r\n\r\nThis generates the *TeXDoclet.jar* file in the `target/` subdirectory.\r\n\r\nNew - Markdown Support\r\n----------------------\r\n\r\n<div class=\"flowleft\" id=\"newsDiv\">\r\n<img src=\"images/icon_new.png\"/>\r\n</div>\r\n\r\n*TeXDoclet* integrates now [Txtmark - Java markdown processor](https://github.com/rjeschke/txtmark). \r\n\r\nForget about to write your javadoc in HTML ! \r\nJust simply write [Markdown syntax](http://daringfireball.net/projects/markdown/syntax) like this (and put it in a `<PRE format=\"md\">` HTML tag) :\r\n\r\n\t<PRE format=\"md\">\r\n\r\n\tsome text some text some text some text some text some text some text \r\n\r\n\t##### Lists\r\n\r\n\t- item1\r\n\t    1. item11\r\n\t    2. item12\r\n\t- item1\r\n\r\n\t##### Text formatting\r\n\r\n\t_emphasis_ and __strong__ and some `code` :\r\n\r\n\t    code line 1\r\n\t    code line 2\r\n\t    \r\n\tsome text some text some text some text some text some text some text\r\n\r\n\t</PRE>\r\n\r\n... and you will get the following _pdflatex_ output :\r\n\r\n<img src=\"images/examples/texdoclet_markdown.png\"/>\r\n\r\nNothing could be simpler! \r\n\r\nUsage\r\n-----\r\n\r\nGenerally a Java documentation is created with the *javadoc* tool (and its default doclet) that comes along with the Java JRE/JDK installation. To create a Java documentation with a doclet other than the default doclet you have to specify the doclet with the `-docletpath` and `-doclet` parameters of the *javadoc* tool :\r\n\r\n\tjavadoc -docletpath <path to doclet .jar file> -doclet <doclet class name>\r\n\r\nAccording to this you have to set the path to the *TeXDoclet.jar* file and the class name `org.stfm.texdoclet.TeXDoclet` for the *javadoc* use with *TeXDoclet* doclet.\r\n\r\nAssuming you have the following project structure :\r\n\r\n    <project root dir>\r\n      src\r\n        main\r\n          java\r\n            com\r\n              <subpackages and java code> \r\n            org\r\n              <subpackages and java code>\r\n\r\nThen the following example *javadoc* execution builds Javadoc documentation (in `out.tex`) from Java sources located in `src/main/java` subdirectory for all packages starting with `org` and `com` :\r\n\r\n\tjavadoc -docletpath path/to/TeXDoclet.jar \\\r\n\t\t-doclet org.stfm.texdoclet.TeXDoclet \\\r\n\t\t-noindex \\\r\n\t\t-tree \\\r\n\t\t-hyperref \\\r\n\t\t-output out.tex \\\r\n\t\t-title \"My Title\" \\\r\n\t\t-author \"My Name\" \\\r\n\t\t-sourcepath src/main/java \\\r\n\t\t-subpackages org:com\r\n\r\n### Example javadoc calls\r\n\r\nSee `createDocs.sh` scripts in `/examples` [subdirectory](https://github.com/doclet/texdoclet/tree/master/examples) of the github project for more examples.\r\n\r\n### TeXDoclet output configuration\r\n\r\n*TeXDoclet* doclet is configured by arguments passed to the doclet by the *javadoc* execution. There are a lot of defined parameters to affect the Latex document output. Print help to get a complete list of parameters you can pass to the *TeXDoclet* doclet :\r\n\r\nPrint help (TeXDoclet + javadoc help) :\r\n\r\n\tjavadoc -docletpath target/TeXDoclet.jar -doclet org.stfm.texdoclet.TeXDoclet\r\n\r\nor (TeXDoclet help only) :\r\n\r\n\tjava -jar target/TeXDoclet.jar -h\r\n\r\n\t-title <title>            A title to use for the generated output document.\r\n\t-subtitle <title>         A subtitle for the output document. No -title will result in no title page.\r\n\t-output <outfile>         Specifies the output file to write to. If none specified, the default is docs.tex in the current directory.\r\n\t-docclass <class>         LaTeX2e document class, `report' is the default.\r\n\t-doctype <type>           LaTeX2e document style, `headings' is the default.\r\n\t-classfilter <name>       The name of a class implementing the ClassFilter interface.\r\n\t-date <date string>       The value to use for the document date.\r\n\t-author <author>          Specifies string to use for document Author.\r\n\t-texinit <file>           LaTeX2e statements included before \\begin{document}.\r\n\t-texsetup <file>          LaTeX2e statements included after \\begin{document} \\maketitle (if title was specified).\r\n\t-texintro <file>          LaTeX2e statements included after table of contents\r\n\t-texfinish <file>         LaTeX2e statements included before \\end{document}.\r\n\t-texpackage <file>        LaTeX2e statements included before packages' \\chapter.\r\n\t-setup <file>             A setup file included before \\begin{document}.\r\n\t-twosided                 Print twosided.\r\n\t-serial                   Do print Serializable information.\r\n\t-nosummaries              Do print summaries of fiels, constructors and methods.\r\n\t-nofieldsummary           Do not print field summaries\r\n\t-noconstructorsummary     Do not print constructor summaries\r\n\t-noinherited              Do not include inherited API information in output.\r\n\t-shortinherited           Prints a short inheritance, only the member name (not the whole signature)\r\n\t-noindex                  Do not create index.\r\n\t-tree                     Create a class tree.\r\n\t-treeindent <float>       Indent <float>cm i the class tree. Default is 1cm.\r\n\t-hyperref                 Use the hyperref package.\r\n\t-pdfhyperref              Use the hyperref package with pdf. Overrides -hypertex.\r\n\t-version                  Includes version-tags .\r\n\t-hr                       Prints horizontal rows in the output (to get a better? view).\r\n\t-include                  Creates output in two seperated latex documents: one for the preamble part and another for the actual java documentation content.\r\n\t-sectionlevel <level>     Specifies the highest level of sections (either \"subsection\", \"section\" or \"chapter\").\r\n\t-imagespath               Path to the texdoclet_images dir (absolute or relative to the output document .tex file).\r\n\t-tablescale <factor>      Scale factor to specify width of tables. Default value is 0.9.\r\n\r\n### How to use generated LaTeX documentation in your own document\r\n\r\nIf you want to use TeXDoclet output in your own LaTeX document, simply use option `-include`. Option `-include` produces two .tex files that you have to insert in your LaTeX document (for instance by using the `\\input{}` LaTeX command) : \r\n\r\n- TeXDoclet_preamble.tex : to include in the preamble part of your LaTeX document.\r\n- TeXDoclet.tex : this is the actual java documentation content that you can place wherever you want between `\\begin{document}` and `\\end{document}` in your LaTeX document. \r\n\r\nSee example 4 in the `/examples/example4_include` [subdirectory](https://github.com/doclet/texdoclet/tree/master/examples/example4_include) of the github project for more info.\r\n\r\n\r\nPrevious versions\r\n-----------------\r\n\r\n- The intitial project of Greg Wonderly is available here : <http://java.net/projects/texdoclet>.\r\n- Its [revision](http://egee-jra1-integration.web.cern.ch/egee-jra1-integration/repository/texdoclet/1.3/share/README.txt) by Soeren Caspersen you find here : <http://egee-jra1-integration.web.cern.ch/egee-jra1-integration/repository/texdoclet>.\r\n\r\n","name":"TeXDoclet","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":""}